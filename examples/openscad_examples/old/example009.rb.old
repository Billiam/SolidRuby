#!/usr/bin/env ruby

require 'solidruby'
include SolidRuby

bodywidth = dxf_dim(f: 'example009.dxf', n: 'bodywidth')
fanwidth = dxf_dim(file = "example009.dxf", name = "fanwidth");
platewidth = dxf_dim(file = "example009.dxf", name = "platewidth");
fan_side_center = dxf_cross(file = "example009.dxf", layer = "fan_side_center");
fanrot = dxf_dim(file = "example009.dxf", name = "fanrot");

r = import(f: "example009.dxf", l: "body")
  .linear_extrude(h: bodywidth, center: true, c: 10)

for (z = [+(bodywidth/2 + platewidth/2),
    -(bodywidth/2 + platewidth/2)]) {
  translate([0, 0, z])
    linear_extrude(height = platewidth, center = true, convexity = 10)
      import(file = "example009.dxf", layer = "plate");
}

r.save('example009.scad')

# echo(version=version());
#
# bodywidth = dxf_dim(file = "example009.dxf", name = "bodywidth");
# fanwidth = dxf_dim(file = "example009.dxf", name = "fanwidth");
# platewidth = dxf_dim(file = "example009.dxf", name = "platewidth");
# fan_side_center = dxf_cross(file = "example009.dxf", layer = "fan_side_center");
# fanrot = dxf_dim(file = "example009.dxf", name = "fanrot");
#
# % linear_extrude(height = bodywidth, center = true, convexity = 10)
#   import(file = "example009.dxf", layer = "body");
#
# % for (z = [+(bodywidth/2 + platewidth/2),
#     -(bodywidth/2 + platewidth/2)]) {
#   translate([0, 0, z])
#     linear_extrude(height = platewidth, center = true, convexity = 10)
#       import(file = "example009.dxf", layer = "plate");
# }
#
# intersection() {
#   linear_extrude(height = fanwidth, center = true, convexity = 10, twist = -fanrot)
#     import(file = "example009.dxf", layer = "fan_top");
#
#   rotate_extrude(convexity = 10)
#     import(file = "example009.dxf", layer = "fan_side", origin = [0, -40]);
# }
